---
- hosts: 127.0.0.1
  connection: local
  become: yes
  vars_files:
    - livefire_answerfile.yml
  tasks:
    - name: Add second edge cluster
      nsxt_edge_clusters:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: edge-cluster-2-SiteA
        members:
        - transport_node_name: "Edge02"
        state: present

    - name: Create T0 logical router for PKS
      nsxt_logical_routers:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "t0-PKS-SiteA"
        edge_cluster_name: edge-cluster-2-SiteA
        router_type: TIER0
        high_availability_mode: ACTIVE_STANDBY
        state: "present"
      register: t0pks

    - name: Create first logical port on EXT1_VLAN LS to connect T0 PKS router
      nsxt_logical_ports:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "T0PKS-Ext1LpA"
        logical_switch_name: "VLAN-Ext1Ls"
        admin_state: UP
        state: "present"
      register: lsp_T0PKS_EXT1a



    - name: Create logical router port on T0 router EN1 to interconnect uplink VLAN EXT1
      nsxt_logical_router_ports:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: LRP-VLAN-Ext1Ls_EN2
        resource_type: LogicalRouterUpLinkPort
        logical_router_id: "{{t0pks.id}}"
        edge_cluster_member_index: [0]
        linked_logical_switch_port_id:
          target_type: LogicalPort
          target_id:  "{{lsp_T0PKS_EXT1a.id }}"
        subnets:
        - ip_addresses:
          - 192.168.100.4
          prefix_length: 24
        state: "present"



    - name: Read BGP configuration on T0 PKS router
      uri:
        method: GET
        url: https://{{hostname}}/api/v1/logical-routers/{{t0pks.id}}/routing/bgp
        user: "admin"
        password: "VMware1!"
        body_format: json
        force_basic_auth: yes
        validate_certs: no
      register: result2


    - name: Enable BGP on T0 PKS router
      uri:
        method: PUT
        url: https://{{hostname}}/api/v1/logical-routers/{{t0pks.id}}/routing/bgp
        user: "admin"
        password: "VMware1!"
        body:
          resource_type: BgpConfig
          description: "Uplink to external"
          display_name: "Uplink to external"
          as_num: 65001
          graceful_restart: false
          enabled: true
          ecmp: true
          _revision: "{{result2.json._revision}}"
        body_format: json
        force_basic_auth: yes
        validate_certs: no

    - name: Read BGP configuration on T0 router
      uri:
        method: GET
        url: https://{{hostname}}/api/v1/logical-routers/{{t0pks.id}}/routing/bgp
        user: "admin"
        password: "VMware1!"
        body_format: json
        force_basic_auth: yes
        validate_certs: no
      register: result3


    - name: Configure BGP peering to vPod router
      uri:
        method: POST
        url: https://{{hostname}}/api/v1/logical-routers/{{t0pks.id}}/routing/bgp/neighbors
        user: "admin"
        password: "VMware1!"
        body:
          display_name: neighbor1
          neighbor_address: "192.168.100.1"
          remote_as_num: 65002
          address_families:
          -
            type: IPV4_UNICAST
            enabled: true
          source_addresses:
            - 192.168.100.4
        body_format: json
        force_basic_auth: yes
        validate_certs: no



    - name: Read routing redistribution configuration on T0 router
      uri:
        method: GET
        url: https://{{hostname}}/api/v1/logical-routers/{{t0pks.id}}/routing/redistribution
        user: "admin"
        password: "VMware1!"
        body_format: json
        force_basic_auth: yes
        validate_certs: no
      register: T0red


    - name: Enable routing redistribution on T0 router
      uri:
        method: PUT
        url:  https://{{hostname}}/api/v1/logical-routers/{{t0pks.id}}/routing/redistribution
        user: "admin"
        password: "VMware1!"
        body:
          resource_type: "RedistributionConfig"
          bgp_enabled: true
          _revision: "{{T0red.json._revision}}"
        body_format: json
        force_basic_auth: yes
        validate_certs: no


    - name: Read routing redistribution rules configuration on T0 router
      uri:
        method: GET
        url: https://{{hostname}}/api/v1/logical-routers/{{t0pks.id}}/routing/redistribution/rules
        user: "admin"
        password: "VMware1!"
        body_format: json
        force_basic_auth: yes
        validate_certs: no
      register: T0redrules

    - name: Add routing redistribution rule ALL on T0 router
      uri:
        method: PUT
        url:  https://{{hostname}}/api/v1/logical-routers/{{t0pks.id}}/routing/redistribution/rules
        user: "admin"
        password: "VMware1!"
        body:
          resource_type: "RedistributionRuleList"
          rules:
          - display_name: everything-into-bgp
            description: BGP learns all routes
            destination: BGP
            sources:
            - NSX_STATIC
            - TIER0_NAT
            - TIER1_LB_VIP
          _revision: "{{T0redrules.json._revision}}"
        body_format: json
        force_basic_auth: yes
        validate_certs: no



    - name: Add IP Block for K8s PODs
      uri:
        method: POST
        url:  https://{{hostname}}/api/v1/pools/ip-blocks
        user: "admin"
        password: "VMware1!"
        body:
          display_name: K8S-IP-BLOCK
          description: K8s pods IP will be allocated from this pool
          cidr: 10.4.0.0/16
        body_format: json
        force_basic_auth: yes
        validate_certs: no
        status_code: 201

    - name: Add IP Block for K8s PODs NoNat
      uri:
        method: POST
        url:  https://{{hostname}}/api/v1/pools/ip-blocks
        user: "admin"
        password: "VMware1!"
        body:
          display_name: K8S-NO-NAT-BLOCK
          description: K8s pods IP will be allocated from this pool
          cidr: 172.30.0.0/16
        body_format: json
        force_basic_auth: yes
        validate_certs: no
        status_code: 201

        
    - name: Add IP Pool for K8s SNATs
      uri:
        method: POST
        url:  https://{{hostname}}/api/v1/pools/ip-pools
        user: "admin"
        password: "VMware1!"
        body:
          display_name: K8S-EXT-NAT-POOL
          subnets:
          - allocation_ranges:
            - start: 172.31.0.1
              end: 172.31.0.254
            cidr: 172.31.0.0/24
        body_format: json
        force_basic_auth: yes
        validate_certs: no
        status_code: 201


